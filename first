@external
func swap{
    syscall_ptr: felt*,
    pedersen_ptr: HashBuiltin*,
    range_check_ptr,
}(token_from: felt, amount_from: felt) -> (amount_to: felt) {
    let (account_id) = get_caller_address();

    // Verify that token_from is either TOKEN_TYPE_A or TOKEN_TYPE_B.
    assert (token_from - TOKEN_TYPE_A) * (token_from - TOKEN_TYPE_B) = 0;

    // Check that the requested amount_from is valid.
    assert_nn_le(amount_from, BALANCE_UPPER_BOUND - 1);

    // Check that the user has enough funds.
    let (account_from_balance) = get_account_token_balance(
        account_id=account_id, token_type=token_from
    );
    assert_le(amount_from, account_from_balance);

    // Execute the actual swap.
    let (token_to) = get_opposite_token(token_type=token_from);
    let (amount_to) = do_swap(
        account_id=account_id,
        token_from=token_from,
        token_to=token_to,
        amount_from=amount_from,
    );

    return (amount_to=amount_to);
}
